pipeline {
    agent { node 'node01' }
    environment {
        // Docker 镜像名称
        IMAGE_NAME = 'jenkins01'
        // 基础镜像名称，这里以官方 Jenkins 镜像为例
        BASE_IMAGE = 'jenkins/jenkins:latest'
    }
    stages {
        stage('Checkout') {
            steps {
                // 检出源代码
                checkout scm
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }
        stage('Pull Base Image') {
            steps {
                script {
                    // 拉取基础镜像
                    sh "docker pull ${BASE_IMAGE}"
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // 构建新镜像，这里假设您的 Dockerfile 在当前目录，并且使用了拉取的基础镜像作为基础
                    sh "docker build -t ${IMAGE_NAME}:${env.BUILD_ID} --build-arg BASE_IMAGE=${BASE_IMAGE} ."
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-res', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                    script {
                        // 登录到 Docker Hub
                        sh 'echo ${DOCKER_HUB_PASSWORD} | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin'
                        // 推送镜像
                        sh "docker push ${IMAGE_NAME}:${env.BUILD_ID}"
                    }
                }
            }
        }
    }
    post {
        success {
            // 构建成功后的操作
            echo 'Build succeeded'
        }
        failure {
            // 构建失败后的操作
            echo 'Build failed'
        }
    }
}
